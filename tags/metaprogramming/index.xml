<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metaprogramming on 7sharp9</title>
    <link>https://7sharp9.github.io/tags/metaprogramming/</link>
    <description>Recent content in Metaprogramming on 7sharp9</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Dave Thomas</copyright>
    <lastBuildDate>Wed, 24 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://7sharp9.github.io/tags/metaprogramming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Applied Meta-Programming</title>
      <link>https://7sharp9.github.io/2019/04/24/2019-04-24-applied-metaprogramming-with-myriad/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://7sharp9.github.io/2019/04/24/2019-04-24-applied-metaprogramming-with-myriad/</guid>
      <description>What is Myriad? Myriad is a pre-compilation tool that generates code from code. It is integrated into the project build cycle via an MSBuild extension. It is also possible to invoke the tool separately as a CLI tool but this essay will deal with describing the integration within an MSBuild project as this would be the most common pattern of usage.
Historical basis Before I dig into the detail its best to get some historical details as the Myriad project stems from previous meta-programming work that I have been doing over the last year, perhaps also further back through my history of using F# too.</description>
    </item>
    
    <item>
      <title>Meta-Matic</title>
      <link>https://7sharp9.github.io/2015/07/12/2015-07-08-meta-matic/</link>
      <pubDate>Sun, 12 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://7sharp9.github.io/2015/07/12/2015-07-08-meta-matic/</guid>
      <description>&lt;p&gt;Sit down, strap in, and prepare for take off, we&amp;rsquo;re going Meta-Matic!&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re going to be exploring some &lt;a href=&#34;https://en.wikipedia.org/wiki/Metaprogramming&#34;&gt;metaprogramming&lt;/a&gt; magic in F#.  Transforming
its abstract syntax tree (&lt;a href=&#34;https://en.wikipedia.org/wiki/Abstract_syntax_tree&#34;&gt;AST&lt;/a&gt;) into another languages AST before executing
it in another &lt;a href=&#34;https://en.wikipedia.org/wiki/Virtual_machine&#34;&gt;virtual machine&lt;/a&gt;, Exciting!!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>